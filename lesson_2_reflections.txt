What happens when you initialize a repository? Why do you need to do it?

  It initializes the directory and all the files in it and allows you to enter your first commit.

How is the staging area different from the working directory and the repository? What value do you think it offers?

  The staging area allows you to check in files before a commit, this allows you to review and rest if needed. It also allows you to commit multiple files.

How can you use the staging area to make sure you have one commit per logical change?

  I can add to the staging area using git add, then using git diff i can compare files and ensure i want to commit the changes.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

  It allows me to create experimental features on a current app without messing with the master branch. Meaning we can use these features in future.

How do the diagrams help you visualize the branch structure?

  The diagrams make it easier to see where the commits are positioned on branches in a visual way that's easier to understand.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

  Merging the two together merges all the commits into one label. Like we can merge a bug fix into the master branch. The diagram is a good way of visualising the commits on the branches and which can be merged.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

  Automatically merging saves time but you have to manual merge sometimes so you can investigate which code changes you want to keep.